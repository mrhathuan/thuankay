@model Shop_Nhi.Models.Framework.Category

@{
    ViewBag.Title = "Sửa danh mục";
    Layout = "~/Areas/Pn/Views/Shared/_Layout.cshtml";
    Sửa danh mục
}
@section JsFooter{
    <script>
        // initialize the validator function
        validator.message['date'] = 'not a real date';

        // validate a field on "blur" event, a 'select' on 'change' event & a '.reuired' classed multifield on 'keyup':
        $('form')
          .on('blur', 'input[required], input.optional, select.required', validator.checkField)
          .on('change', 'select.required', validator.checkField)
          .on('keypress', 'input[required][pattern]', validator.keypress);

        $('.multi.required')
          .on('keyup blur', 'input', function () {
              validator.checkField.apply($(this).siblings().last()[0]);
          });

        // bind the validation to the form submit event
        //$('#send').click('submit');//.prop('disabled', true);

        $('form').submit(function (e) {
            e.preventDefault();
            var submit = true;
            // evaluate the form using generic validaing
            if (!validator.checkAll($(this))) {
                submit = false;
            }

            if (submit)
                this.submit();
            return false;
        });

        /* FOR DEMO ONLY */
        $('#vfields').change(function () {
            $('form').toggleClass('mode2');
        }).prop('checked', false);

        $('#alerts').change(function () {
            validator.defaults.alerts = (this.checked) ? false : true;
            if (this.checked)
                $('form .alert').remove();
        }).prop('checked', false);
    </script>


}

<p class="text-muted font-13 m-b-30">
    @Html.ActionLink("Quay lại", "Index", "Category", new { @class = "btn btn-default" })
</p>
@using (Html.BeginForm("Edit", "Category", FormMethod.Post, new { @class = "form-horizontal form-label-left" }))
{
    <p>
        Những ô có dấu <code>*</code> là phải nhập đầy đủ thông tin
    </p>
    <span class="section">@Model.name</span>
    @Html.HiddenFor(model => model.ID);
   <div class="item form-group">
        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
            Tên danh mục <span class="required"><code>*</code></span>
        </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.name, new { @class = "form-control col-md-7 col-xs-12", @required = "required" })
        </div>
    </div>

    <div class="item form-group">
        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="parentID">
            ParentID <span class="required"></span>
        </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.parentID, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
        </div>
    </div>


    <div class="item form-group">
        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="number">
            MetaKeywords <span class="required"></span>
        </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.metaKeywords, new { @class = "form-control col-md-7 col-xs-12" })
        </div>
    </div>

    <div class="item form-group">
        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="number">
            MetaDescription <span class="required"></span>
        </label>
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.metaDescription, new { @class = "form-control col-md-7 col-xs-12"  })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-3 col-md-6">
            <input type="submit" value="Sửa" class="btn btn-info" />
            <input type="reset" value="Nhập lại" class="btn btn-default" />
        </div>
    </div>
}

